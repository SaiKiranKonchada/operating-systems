alias functionNum R1;
alias currentPID R2;

if(functionNum==2) then//checking for disk load
   alias pagenum R3;
   alias blocknum R4;
   
   multipush(R0,R1,R2,R3,R4);
   R1=3;
   R2=[SYSTEM_STATUS_TABLE+1];
   call MOD_0;
   multipop(R0,R1,R2,R3,R4);
   
   [DISK_STATUS_TABLE+0]=1;
   [DISK_STATUS_TABLE+1]=0;
   [DISK_STATUS_TABLE+2]=pagenum;
   [DISK_STATUS_TABLE+3]=blocknum;
   [DISK_STATUS_TABLE+4]=currentPID;
   load(pagenum,blocknum);
   [PROCESS_TABLE+currentPID*16+4]=WAIT_DISK;
   
   multipush(R1,R2,R3,R4);
   call MOD_5;
   multipop(R1,R2,R3,R4);
   return;
endif;
   
   

if(functionNum==3) then//checking for terminal write
   alias word R3;
   multipush(R0,R1,R2,R3,R4);
   R1=8;
   R2=[SYSTEM_STATUS_TABLE+1];
   call MOD_0;
   multipop(R0,R1,R2,R3,R4);
   
   print word;
   
   multipush(R0,R1,R2,R3,R4);
   functionNum=9;
   currentPID=[SYSTEM_STATUS_TABLE+1];
   call MOD_0;
   multipop(R0,R1,R2,R3,R4);
   return;
	   
endif;
 
if(functionNum==4) then //checking for terminal read
     alias word R3;
     multipush(R0,R1,R2,R3,R4);
     R1=8;
     R2=currentPID;
     call MOD_0;
     multipop(R0,R1,R2,R3,R4);
     read;
     [PROCESS_TABLE+currentPID*16+4]=WAIT_TERMINAL;
     multipush(R0,R1,R2,R3,R4);
     call MOD_5;
     multipop(R0,R1,R2,R3,R4);
     [[PTBR+2*((word)/512)]*512 +(word%512)]=[PROCESS_TABLE+currentPID*16+8];
     
endif;

return;
